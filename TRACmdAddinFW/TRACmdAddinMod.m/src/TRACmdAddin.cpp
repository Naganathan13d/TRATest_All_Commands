// COPYRIGHT Dassault Systemes 2022
//===================================================================
//
// TRACmdAddin.cpp
// Provide implementation to interface
//    CATIPrtCfgAddin
//    CATIShapeDesignWorkshopAddin
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//  Aug 2022  Creation: Code generated by the CAA wizard  Naga
//===================================================================
#include "TRACmdAddin.h"

#include "CATCommandHeader.h"
#include "CATCreateWorkshop.h"
#include "CATCmdStarter.h"




MacDeclareHeader(MyHeader);
 
CATImplementClass(TRACmdAddin,
                  DataExtension,
                  CATBaseUnknown,
                  TRAECmdAddin );
 

//-----------------------------------------------------------------------------
// TRACmdAddin : constructor
//-----------------------------------------------------------------------------
TRACmdAddin::TRACmdAddin():
    CATBaseUnknown()
{
}

//-----------------------------------------------------------------------------
// TRACmdAddin : destructor
//-----------------------------------------------------------------------------
TRACmdAddin::~TRACmdAddin()
{
}
 
// Link the implementation to its interface
// ---------------------------------------



//TIE or TIEchain definitions
#include "TIE_CATIPrtCfgAddin.h"
TIE_CATIPrtCfgAddin( TRACmdAddin);
#include "TIE_CATIShapeDesignWorkshopAddin.h"
TIE_CATIShapeDesignWorkshopAddin( TRACmdAddin);
#include "TIE_CATIDrwAddin.h"
TIE_CATIDrwAddin( TRACmdAddin);

//Methods implementation

void TRACmdAddin::CreateCommands()

{

	new MyHeader("TRACommand_1", "TRACommandMod", "TRACommand10", (void*)NULL, CATFrmAvailable);

	new MyHeader("TRACommand_2", "TRACommandMod", "TRACommand7", (void*)NULL, CATFrmAvailable);
}

CATCmdContainer * TRACmdAddin::CreateToolbars()

{

	NewAccess(CATCmdContainer, pToolBar, Naga);

	NewAccess(CATCmdStarter, pButton1, Button1);
	SetAccessCommand (pButton1, "TRACommand_1");
	SetAccessChild(pToolBar,pButton1);

	NewAccess(CATCmdStarter, pButton2, Button2);
	SetAccessCommand (pButton2, "TRACommand_2");
	SetAccessNext(pButton1,pButton2);


	AddToolbarView(pToolBar, 1, Left);

	return pToolBar;

}

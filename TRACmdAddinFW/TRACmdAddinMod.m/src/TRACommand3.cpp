// COPYRIGHT Dassault Systemes 2022
//===================================================================
//
// TRACommand3.cpp
// The command: TRACommand3
//
//===================================================================
//
// Usage notes:
//
//===================================================================
//
//  Aug 2022  Creation: Code generated by the CAA wizard  Naga
//===================================================================
#include <iostream>
using namespace std;

#include "TRACommand3.h"

#include "TRAUtilities.h"

#include "CATCreateExternalObject.h"
#include "CATIPrtPart.h"
#include "CATIPrtContainer.h"
#include "CATISpecObject.h"
#include "CATIProduct.h"
#include "CATIPrdProperties.h"





CATCreateClass( TRACommand3);


//-------------------------------------------------------------------------
// Constructor
//-------------------------------------------------------------------------
TRACommand3::TRACommand3() :
  CATCommand (NULL, "TRACommand3")
{
  RequestStatusChange (CATCommandMsgRequestExclusiveMode);
}

//-------------------------------------------------------------------------
// Destructor
//-------------------------------------------------------------------------
TRACommand3::~TRACommand3()
{
}


//  Overload this method: when your command gains focus
//
// Activates a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TRACommand3::Activate( CATCommand * iFromClient, CATNotification * iEvtDat)
{
	_piPartContainer = _pTRAUtilities->GetPartContainer();

	CATIPrtContainer_var          spPartCont   = _piPartContainer;

	CATIPrtPart_var               spPart       = spPartCont -> GetPart();

	CATISpecObject_var spPrdSpecObj = spPart->GetProduct();

	CATIProduct *piChildProduct;

	HRESULT rc = spPrdSpecObj->QueryInterface(IID_CATIProduct,(void**) &piChildProduct);

	CATUnicodeString oValue;

	oValue = piChildProduct->GetPartNumber();

	cout << "       Part Number: " << oValue.ConvertToChar() << endl;

	CATIPrdProperties_var spPrdProps(piChildProduct);

	spPrdProps->GetDefinition(oValue);
		cout << "       Definition: " << oValue.ConvertToChar() << endl;

	spPrdProps->GetDescriptionRef(oValue);
		cout << "   Reference Desc: " << oValue.ConvertToChar() << endl;

		spPrdProps->GetDescriptionInst(oValue);
		cout << "   Instance Desc.: " << oValue.ConvertToChar() << endl;




  return (CATStatusChangeRCCompleted);
}

//  Overload this method: when your command loses focus
//
// Deactivates a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TRACommand3::Desactivate( CATCommand * iFromClient, CATNotification * iEvtDat)
{
  return (CATStatusChangeRCCompleted);
}

//  Overload this method: when your command is canceled
//
// Cancel a command.
//   iFromClient :The command that requests to activate the current one.
//   iEvtDat :The notification sent.
// ----------------------------------------------------
CATStatusChangeRC TRACommand3::Cancel( CATCommand * iFromClient, CATNotification * iEvtDat)
{
  RequestDelayedDestruction();
  return (CATStatusChangeRCCompleted);
}
